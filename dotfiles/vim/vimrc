filetype plugin indent on
syntax on
runtime ftplugin/man.vim
set keywordprg=:Man

exec "set list listchars=tab:\u258F\\\u20,trail:\u2508,nbsp:\uA4"
set nocompatible "set first to not overide other settings
set autowriteall autoread
set background=dark
set cino+=(0g0=0 
set completeopt-=preview complete=.,w,b,u,t
set diffopt+=iwhiteall,algorithm:patience,indent-heuristic diffopt-=internal
set encoding=utf8
set expandtab tabstop=4 shiftwidth=4 smarttab softtabstop=0 autoindent
set formatoptions-=o
set grepprg=grep\ -In\ --exclude=tags\ --exclude-dir=.svn\ --exclude=\\*log
set history=1000 undofile viminfofile=$XDG_DATA_HOME/vim/viminfo viminfo='1000,<50,s10,h
set hlsearch incsearch showmatch
set keywordprg=:Man
set mouse= nowrap
set number relativenumber
set path+=**
set runtimepath=$XDG_CONFIG_HOME/vim,/usr/share/vim/vimfiles,$VIMRUNTIME
set scrolloff=10
set t_Co=256
set undodir=$XDG_DATA_HOME/vim/undo directory=$XDG_DATA_HOME/vim/swap backupdir=$XDG_DATA_HOME/vim/backup viewdir=$XDG_DATA_HOME/vim/view
set virtualedit=block
set wildmenu showcmd
set statusline=%f\ %h%w%m%r\ %=%(%l,%c%V\ %=\ %P%)\ %{synIDattr(synID(line(\".\"),col(\".\"),1),\"name\")}

let g:netrw_banner = 0
let g:netrw_sort_sequence = '[\/]$'
let g:netrw_preview = 1
let g:netrw_liststyle = 3
let g:OmniCpp_DisplayMode = 1
let g:OmniCpp_ShowPrototypeInAbbr = 1
let g:OmniCpp_NamespaceSearch = 1
let g:markdown_fenced_languages = ['c', 'cpp', 'vb', 'dot']

nnoremap g<C-]> :cs find 0 <C-R>=expand("<cword>")<CR><CR>
nnoremap g<C-\> :cs find 3 <C-R>=expand("<cword>")<CR><CR>
nnoremap gz :wall<CR>
nnoremap gH :noh<CR>

hi DiffAdd      cterm=none      ctermfg=0        ctermbg=darkgreen
hi DiffChange   cterm=none      ctermfg=white    ctermbg=darkblue
hi DiffDelete   cterm=none      ctermfg=0        ctermbg=darkred
hi DiffText     cterm=none      ctermfg=darkblue ctermbg=white
hi MatchParen   cterm=none      ctermbg=darkgrey ctermfg=black
hi PmenuSel     ctermfg=black   ctermbg=white
hi QuickFixLine ctermbg=darkred ctermbg=black
hi Special      ctermfg=darkred ctermbg=black
hi SpellBad     ctermfg=white

if filereadable(expand("$XDG_CONFIG_HOME/vim/addi.vim"))
    source $XDG_CONFIG_HOME/vim/addi.vim
    autocmd BufNewFile,BufRead COMMIT_EDITMSG inoremap <F2> <C-R>=Jid()<CR>
endif
"if split(system("uname"), "-")[0] ==? "CYGWIN_NT"
"    set errorformat=\ %#%f(%l\\\,%c):\ %m
"endif
if filereadable("./cscope.out")
    set cscopetag cscoperelative "cscopequickfix=s-,c-,d-,i-,t-,e-,a-
    cscope add cscope.out
endif
if filereadable("./cyg_nmake")
    set makeprg=./cyg_nmake errorformat=%f(%l):\ %t%s\ C%n:\ %m
endif
if ! filereadable("./make")
    autocmd FileType cpp set makeprg=g++\ %\ -o\ %<\ &&\ ./%<
endif

autocmd BufNewFile,BufRead neomutt-*,COMMIT_EDITMSG,*.tex,*.yml,*.md setlocal spell
autocmd BufNewFile,BufRead *.jira setlocal syntax=jira spell laststatus=2
autocmd BufNewFile,BufRead *.~,*.txt,*.vhdl set nolist
autocmd BufNewFile,BufRead *.gnuplot set ft=gnuplot
autocmd FileType cpp      set omnifunc=omni#cpp#complete#Main comments=s:/*,m:\ ,e-3:*/
autocmd FileType python   set makeprg=python\ % errorformat=\%*\\sFile\ \"%f\"\\,\ line\ %l\\,\ %m,\%*\\sFile\ \"%f\"\\,\ line\ %l,
autocmd FileType tex      set makeprg=tex2pdf\ %
autocmd FileType markdown set makeprg=markdown_py\ %\ -f\ %<.html
autocmd FileType gnuplot  set makeprg=gnuplot\ -c\ %\ &&\ sxiv\ %<.png
autocmd FileType dot      set makeprg=dot\ -Tpng\ %\ \\\|\ display

command! Bro   enew! | setl  buftype=nofile | 0put =v:oldfiles | exe "silent % !$FUZZY" | norm gf
command! Make  wa | silent make | redraw! | cw
command! Ctags !ctags -R --c++-kinds=+pl --fields=+iaS --extras=+q
